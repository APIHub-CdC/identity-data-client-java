/*
 * API Identity Data
 * <p>Identity Data API es un facilitador de funcionalidades que engloba información de distintas fuentes de acceso públicas y privadas en el progreso del producto para realizar la validación de identidad del Cliente. El objetivo es que a través de una sola API, el usuario puede acceder, corroborar y validar la identidad de la persona haciendo la solicitud de un producto o servicio.</p><br/>
 *
 * OpenAPI spec version: 1.0
 * Contact: api@circulodecredito.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.idenityData.client.api;

import io.idenityData.client.ApiClient;
import io.idenityData.client.model.ResponseINE;
import io.idenityData.client.model.ResponseRenapo;
import io.idenityData.client.model.ResponseSEP;
import io.idenityData.interceptor.SignerInterceptor;
import io.idenityData.client.model.InlineResponse200;
import io.idenityData.client.model.Request;
import org.junit.Before;
import org.junit.Test;
import okhttp3.OkHttpClient;


import java.util.concurrent.TimeUnit;


/**
 * API tests for FimpeApi
 */

public class FimpeApiTest {

    private final FimpeApi api = new FimpeApi();


    private String username = "your_username_otorgante";
    private String password = "your_password_otorgante";

    private String xApiKey = "your_x_Api_Key";
    private ApiClient apiClient = null;

    @Before
    public void setUp() {
        this.apiClient = api.getApiClient();
        this.apiClient.setBasePath("the_url");
        OkHttpClient okHttpClient = new OkHttpClient().newBuilder()
                .readTimeout(30, TimeUnit.SECONDS)
                .addInterceptor(new SignerInterceptor())
                .build();
        apiClient.setHttpClient(okHttpClient);
    }
    /**
     * 
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createCredentialTest() throws Exception {
        String xSignature = null;
        String xApiKey = this.xApiKey;
        String username = this.username;
        String password = this.password;
        Request body = new Request();
        body.setInfoProvider(Request.InfoProviderEnum.INE);
        body.setCic("YOUR_CIC");
        body.setOcr("YOUR_OCR");
        body.setReferencia("YOUR_REFERENCIA");
        body.setInstitucion("C_CREDITO");
        body.setFecha("YOUR_DATE");
        body.setRequestId("3842184a-89b6-4307-ab87-dc5d830819fa");


        ResponseINE response = api.callIneWithHttpInfo( xApiKey, username, password, body).getData();

    }


    @Test
    public void renapoGet() throws Exception {
        String xSignature = null;
        String xApiKey = this.xApiKey;
        String username = this.username;
        String password = this.password;
        Request body = new Request();
        body.setInfoProvider(Request.InfoProviderEnum.RENAPO);
        body.setCurp("YOUR_CuRP");
        body.setReferencia("YOUR_REFERENCIA");
        body.setFecha("YOUR_DATE");
        body.setRequestId("3842184a-89b6-4307-ab87-dc5d830819fa");


        ResponseRenapo response = api.callRENAPO( xApiKey, username, password, body).getData();

    }

    @Test
    public void sepet() throws Exception {
        String xSignature = null;
        String xApiKey = this.xApiKey;
        String username = this.username;
        String password = this.password;
        Request body = new Request();
        body.setInfoProvider(Request.InfoProviderEnum.SEP);
        body.setNumeroCedula("YOUR_CEDULA");
        body.setReferencia("YOUR_REFERENCIA");
        body.setInstitucion("YOUR_INSTITuTION");
        body.setFecha("YOUR_DATE");
        body.setRequestId("3842184a-89b6-4307-ab87-dc5d830819fa");


        ResponseSEP response = api.callSEP( xApiKey, username, password, body).getData();

    }
}
