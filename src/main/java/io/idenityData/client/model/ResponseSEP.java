/*
 * API Identity Data
 * <p>Identity Data API es un facilitador de funcionalidades que engloba información de distintas fuentes de acceso públicas y privadas en el progreso del producto para realizar la validación de identidad del Cliente. El objetivo es que a través de una sola API, el usuario puede acceder, corroborar y validar la identidad de la persona haciendo la solicitud de un producto o servicio.</p><br/>
 *
 * OpenAPI spec version: 1.0
 * Contact: api@circulodecredito.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.idenityData.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import java.util.UUID;
/**
 * ResponseSEP
 */


public class ResponseSEP implements InlineResponse200 {
  @SerializedName("code")
  private Integer code = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("datetime")
  private String datetime = null;

  @SerializedName("requestId")
  private UUID requestId = null;

  @SerializedName("data")
  private DataSep data = null;

  public ResponseSEP code(Integer code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/

  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }

  public ResponseSEP message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/

  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public ResponseSEP datetime(String datetime) {
    this.datetime = datetime;
    return this;
  }

   /**
   * Get datetime
   * @return datetime
  **/

  public String getDatetime() {
    return datetime;
  }

  public void setDatetime(String datetime) {
    this.datetime = datetime;
  }

  public ResponseSEP requestId(UUID requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * The identifier of the identity darta request given by the API consumer (UUID).
   * @return requestId
  **/

  public UUID getRequestId() {
    return requestId;
  }

  public void setRequestId(UUID requestId) {
    this.requestId = requestId;
  }

  public ResponseSEP data(DataSep data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/

  public DataSep getData() {
    return data;
  }

  public void setData(DataSep data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseSEP responseSEP = (ResponseSEP) o;
    return Objects.equals(this.code, responseSEP.code) &&
        Objects.equals(this.message, responseSEP.message) &&
        Objects.equals(this.datetime, responseSEP.datetime) &&
        Objects.equals(this.requestId, responseSEP.requestId) &&
        Objects.equals(this.data, responseSEP.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, message, datetime, requestId, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseSEP {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    datetime: ").append(toIndentedString(datetime)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
